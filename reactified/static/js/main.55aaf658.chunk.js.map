{"version":3,"sources":["components/Post.js","components/SubpageHeader.js","components/Listing.js","components/CreatePost.js","reducers/actions.js","components/Category.js","components/MainCategoryList.js","components/Sidebar.js","components/MainLayout.js","components/About.js","App.js","serviceWorker.js","reducers/sampleData.js","reducers/rootReducer.js","index.js"],"names":["Post","props","List","Item","verticalAlign","Content","floated","post","date","toLocaleDateString","Header","title","description","SubpageHeader","as","to","Listing","categories","useSelector","state","subCategories","posts","id","match","params","categoryId","subCategory","find","s","parseInt","category","c","visiblePosts","filter","p","subCategoryId","sort","p1","p2","Container","text","name","divided","ordered","map","key","CreatePost","useState","selectedCategoryId","setSelectedCategoryId","selectedSubCategoryId","setSelectedSubCategoryId","createdPost","setCreatedPost","dispatch","useDispatch","useForm","register","handleSubmit","errors","categoryOptions","value","fluid","Divider","Form","onSubmit","data","Date","type","Group","widths","Select","label","options","onChange","e","placeholder","error","ref","disabled","sc","Field","required","Button","primary","Category","visibleSubs","Card","Description","sub","MainCategoryList","Sidebar","Segment","secondary","textAlign","style","height","relaxed","background","MainLayout","Grid","Column","width","children","About","bulleted","href","Icon","App","className","path","exact","component","Boolean","window","location","hostname","defaultCategories","defaultSubCategories","defaultPosts","combineReducers","action","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.55aaf658.chunk.js","sourcesContent":["import React from 'react';\r\nimport {List} from 'semantic-ui-react';\r\n\r\n\r\nconst Post = function(props) {\r\n  return (\r\n    <List.Item verticalAlign=\"top\">\r\n      <List.Content floated=\"right\">\r\n        <i>{props.post.date.toLocaleDateString(\"hu-HU\")}</i>\r\n      </List.Content>\r\n\r\n      <List.Header>\r\n        {props.post.title}\r\n      </List.Header>\r\n\r\n      <List.Content>\r\n        {props.post.description}\r\n      </List.Content>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Header} from 'semantic-ui-react';\r\n\r\nconst SubpageHeader = function(props) {\r\n  return (\r\n    <div>\r\n      <Header as=\"h4\">\r\n        <Link to=\"/\">{\"<< Home\"}</Link>\r\n      </Header>\r\n      <Header as=\"h2\">{props.title}</Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubpageHeader;\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Container, List} from 'semantic-ui-react';\r\nimport Post from './Post';\r\nimport SubpageHeader from './SubpageHeader';\r\n\r\nconst Listing = function(props) {\r\n  const categories = useSelector(state => state.categories);\r\n  const subCategories = useSelector(state => state.subCategories);\r\n  const posts = useSelector(state => state.posts);\r\n  const id = props.match.params.categoryId;\r\n\r\n  const subCategory = subCategories.find(s => s.id === parseInt(id));\r\n\r\n  if (!subCategory) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  const category = categories.find(c => c.id === subCategory.categoryId);\r\n  const visiblePosts = posts\r\n    .filter(p => p.subCategoryId === subCategory.id)\r\n    .sort((p1, p2) => p2.date - p1.date);\r\n\r\n  return (\r\n    <Container text>\r\n      <SubpageHeader title={category.name + \" > \" + subCategory.name} />\r\n      <List divided ordered>\r\n        {visiblePosts.map(post => (\r\n          <Post key={post.title} post={post} />\r\n        ))}\r\n      </List>\r\n    </Container>\r\n\r\n  );\r\n};\r\n\r\nexport default Listing;\r\n","import React from 'react';\r\nimport {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {createPost} from '../reducers/actions';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Container, Form, Button, Divider} from 'semantic-ui-react';\r\nimport SubpageHeader from './SubpageHeader';\r\n\r\n\r\nconst CreatePost = function(props) {\r\n  const [selectedCategoryId, setSelectedCategoryId] = useState(null);\r\n  const [selectedSubCategoryId, setSelectedSubCategoryId] = useState(null);\r\n  const [createdPost, setCreatedPost] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {register, handleSubmit, errors} = useForm();\r\n\r\n  const categories = useSelector(state => state.categories);\r\n  const subCategories = useSelector(state => state.subCategories);\r\n\r\n  const categoryOptions = categories.map(c => {\r\n    return {key: c.id, text: c.name, value: c.id};\r\n  });\r\n\r\n  function onMainCategorySelected(e, {value}) {\r\n    setSelectedCategoryId(value);\r\n    setSelectedSubCategoryId(null);\r\n  };\r\n\r\n  function visibleSubCategoryOptions() {\r\n    if (selectedCategoryId === null) return [];\r\n    return subCategories\r\n      .filter(sc => sc.categoryId === selectedCategoryId)\r\n      .map(sc => { return {key: sc.id, text: sc.name, value: sc.id} });\r\n  };\r\n\r\n  const onSubmit = data => {\r\n    if (selectedSubCategoryId == null) return;\r\n    data.subCategoryId = selectedSubCategoryId;\r\n    data.date = new Date();\r\n    setCreatedPost(data);\r\n    dispatch(createPost(data));\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      {createdPost &&\r\n        <Redirect to={\"/listing/\" + selectedSubCategoryId} />\r\n      }\r\n\r\n      <SubpageHeader title=\"create a new post\" />\r\n\r\n      <Divider/>\r\n\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Select\r\n            fluid label=\"main category\"\r\n            options={categoryOptions}\r\n            onChange={onMainCategorySelected}\r\n            placeholder=\"select a main category\"\r\n          />\r\n\r\n          <Form.Select\r\n            error={selectedSubCategoryId == null}\r\n            name=\"subCategoryId\"\r\n            ref={() => register()}\r\n            fluid label=\"sub category\"\r\n            disabled={selectedCategoryId === null}\r\n            options={visibleSubCategoryOptions()}\r\n            onChange={(e, {value}) => setSelectedSubCategoryId(value)}\r\n            value={selectedSubCategoryId}\r\n            placeholder=\"select a sub category\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Field error={errors.title}>\r\n          <label>title</label>\r\n          <input\r\n            name=\"title\"\r\n            ref={register({ required: \"this field is required\" })}\r\n            error={errors.title}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>description</label>\r\n          <textarea name=\"description\" ref={register} />\r\n        </Form.Field>\r\n        <Button primary type=\"submit\" disabled={selectedSubCategoryId == null}>Submit</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","// action types\r\nexport const CREATE_POST = 'CREATE_POST';\r\n\r\n// action creators\r\nexport function createPost(post) {\r\n  return { type: CREATE_POST, post: post };\r\n}\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {List, Card} from 'semantic-ui-react';\r\n\r\nconst Category = function(props) {\r\n  const subCategories = useSelector(state => state.subCategories);\r\n  const visibleSubs = subCategories.filter(s => s.categoryId === props.category.id);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Content>\r\n        <Card.Header>{props.category.name}</Card.Header>\r\n        <Card.Description>\r\n          <List>\r\n            {visibleSubs.map(sub => (\r\n              <List.Item key={sub.name}>\r\n                <Link to={'/listing/' + sub.id}>{sub.name}</Link>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Card} from 'semantic-ui-react';\r\nimport Category from './Category';\r\n\r\nfunction MainCategoryList() {\r\n  const categories = useSelector(state => state.categories);\r\n\r\n  return (\r\n    <Card.Group>\r\n      {categories.map(category => (\r\n        <Category key={category.id} category={category} />\r\n      ))}\r\n    </Card.Group>\r\n  );\r\n}\r\n\r\nexport default MainCategoryList;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Segment, Header, List} from 'semantic-ui-react';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <Segment secondary textAlign=\"center\" style={{height: '175px'}}>\r\n      <Header as=\"h1\">\r\n        <Link to=\"/\">reactified</Link>\r\n      </Header>\r\n      <Header as=\"h4\">\r\n        <List relaxed>\r\n          <List.Item>\r\n            <Link style={{background: 'yellow'}} to=\"/createPost\">create a post</Link>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Link to=\"/about\">about</Link>\r\n          </List.Item>\r\n        </List>\r\n      </Header>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport {Container, Grid} from 'semantic-ui-react';\r\nimport Sidebar from './Sidebar';\r\n\r\nfunction MainLayout(props) {\r\n  return (\r\n    <Container>\r\n      <Grid divided>\r\n        <Grid.Column width={4}>\r\n          <Sidebar />\r\n        </Grid.Column>\r\n        <Grid.Column width={9}>\r\n          {props.children}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport {Container, List, Icon} from 'semantic-ui-react';\r\nimport SubpageHeader from './SubpageHeader';\r\n\r\nconst About = function() {\r\n  return (\r\n    <Container text>\r\n      <SubpageHeader title=\"about\" />\r\n      <p>\r\n        Simple craigslist-like React app to try the framework. No backend\r\n        available, all data live in your browser only. Tech used:\r\n      </p>\r\n      <List bulleted>\r\n        <List.Item>\r\n          <b><a href=\"https://reactjs.org/\">React</a></b>, for building the UI\r\n        </List.Item>\r\n        <List.Item>\r\n          <b><a href=\"https://redux.js.org/\">Redux</a></b>, for managing the state\r\n        </List.Item>\r\n        <List.Item>\r\n          <b><a href=\"https://reacttraining.com/react-router/web/guides/quick-start\">React Router</a></b>, to manage the routes\r\n        </List.Item>\r\n        <List.Item>\r\n          <b><a href=\"https://react-hook-form.com/\">React Hook Form</a></b>, for the create post form\r\n        </List.Item>\r\n        <List.Item>\r\n          <b><a href=\"https://github.com/Semantic-Org/Semantic-UI-React\">Semantic-UI-React</a></b>, for the clean look\r\n        </List.Item>\r\n      </List>\r\n\r\n      <p>\r\n        <a href=\"https://github.com/rm-richard/reactified-frontend\">\r\n          <Icon name=\"github\"/>Source available on GitHub\r\n        </a>\r\n      </p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Listing from './components/Listing';\nimport CreatePost from './components/CreatePost';\nimport MainCategoryList from './components/MainCategoryList';\nimport MainLayout from './components/MainLayout';\nimport About from './components/About';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact component={MainCategoryList} />\n          <Route path=\"/listing/:categoryId\" exact component={Listing} />\n          <Route path=\"/createPost\" exact component={CreatePost} />\n          <Route path=\"/about\" exact component={About} />\n          <Route component={MainCategoryList} />\n        </Switch>\n      </MainLayout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const defaultCategories = [\r\n  { id: 0, name: 'housing' },\r\n  { id: 1, name: 'jobs'},\r\n  { id: 2, name: 'for sale'},\r\n];\r\n\r\nexport const defaultSubCategories = [\r\n  // housing\r\n  {id: 1, categoryId: 0, name: 'apt / housing'},\r\n  {id: 2, categoryId: 0, name: 'room share'},\r\n  {id: 3, categoryId: 0, name: 'vacation rentals'},\r\n  // for sale\r\n  {id: 4, categoryId: 2, name: 'cheap stuff'},\r\n  {id: 5, categoryId: 2, name: 'expensive stuff'},\r\n  // jobs\r\n  {id: 6, categoryId: 1, name: 'blue collar'},\r\n  {id: 7, categoryId: 1, name: 'white collar'},\r\n];\r\n\r\nexport const defaultPosts = [\r\n  {\r\n    title: 'Small house for sale',\r\n    description: 'sample description',\r\n    subCategoryId: 1,\r\n    date: new Date('2020-03-15'),\r\n  },\r\n  {\r\n    title: 'Another house for sale',\r\n    description: 'sample description 2',\r\n    subCategoryId: 1,\r\n    date: new Date('2020-03-17'),\r\n  },\r\n  {\r\n    title: 'Farm for sale',\r\n    description: 'sample description 3',\r\n    subCategoryId: 1,\r\n    date: new Date('2020-06-01'),\r\n  },\r\n  {\r\n    title: 'Room for rent',\r\n    description: 'room for rent description',\r\n    subCategoryId: 2,\r\n    date: new Date('2020-04-23'),\r\n  },\r\n  {\r\n    title: 'Selling my old CD player',\r\n    description: 'idk if it even works',\r\n    subCategoryId: 4,\r\n    date: new Date('2020-04-25'),\r\n  },\r\n  {\r\n    title: 'Buy my car',\r\n    description: 'My car is for sale',\r\n    subCategoryId: 5,\r\n    date: new Date('2020-05-19'),\r\n  },\r\n  {\r\n    title: 'Mow my lawn',\r\n    description: 'I need a gardener',\r\n    subCategoryId: 6,\r\n    date: new Date('2020-01-15'),\r\n  },\r\n  {\r\n    title: 'Code me a website',\r\n    description: 'React hacker wanted',\r\n    subCategoryId: 7,\r\n    date: new Date('2020-06-21'),\r\n  },\r\n];\r\n","import {combineReducers} from 'redux';\r\nimport {CREATE_POST} from './actions';\r\nimport {defaultCategories, defaultSubCategories, defaultPosts} from './sampleData.js';\r\n\r\nfunction categories(state = defaultCategories, action) {\r\n  return state;\r\n}\r\n\r\nfunction subCategories(state = defaultSubCategories, action) {\r\n  return state;\r\n}\r\n\r\nfunction posts(state = defaultPosts, action) {\r\n  switch (action.type) {\r\n    case CREATE_POST:\r\n      return [...state, action.post]\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  categories, subCategories, posts\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}